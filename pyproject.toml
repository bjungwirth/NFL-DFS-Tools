[project]
name = "nfl-dfs-tools"
version = "1.0.0"
description = "NFL Daily Fantasy Sports optimization and simulation toolkit"
authors = [
    { name = "Sean (chanzer0)" },
    { name = "Blaine (bjungwirth)" }
]
readme = "README.md"
requires-python = ">=3.12"
keywords = ["nfl", "dfs", "fantasy", "optimization", "simulation"]


classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Games/Entertainment :: Simulation",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "pulp>=2.7.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pytz>=2023.3",
    "json5>=0.9.14",
    "scipy>=1.10.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "numba>=0.58.0",
    "thefuzz>=0.19.0",
    "python-levenshtein>=0.20.0",
    
    "pyyaml>=6.0.0",
    "tqdm>=4.67.0",
]

[project.urls]
Homepage = "https://www.acemind.io/"
"Sean (GitHub)" = "https://github.com/chanzer0"
"Blaine (GitHub)" = "https://github.com/bjungwirth"


[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
nfl-dfs = "src.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | output
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
exclude = [
    "output/",
    "dk_data/",
    "fd_data/",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]